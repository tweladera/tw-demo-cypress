name: Cypress Optimized Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  # Configuración global
  CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
  NODE_ENV: test

jobs:
  cypress-optimized:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache Cypress binary
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/Cypress
          node_modules
          */*/node_modules
        key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          cypress-cache-${{ runner.os }}-

    - name: Install dependencies
      run: npm ci

    - name: Verify Cypress installation
      run: npx cypress verify

    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        browser: chrome
        headless: true
        record: false
        config: |
          video=true
          screenshotOnRunFailure=true
          trashAssetsBeforeRuns=true
          videoCompression=32
        env: |
          ORANGEHRM_USERNAME=${{ secrets.ORANGEHRM_USERNAME }}
          ORANGEHRM_PASSWORD=${{ secrets.ORANGEHRM_PASSWORD }}
          CI=true

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ github.run_number }}
        path: cypress/results/screenshots
        retention-days: 30

    - name: Upload videos
      uses: actions/upload-artifact@v4
      with:
        name: videos-${{ github.run_number }}
        path: cypress/results/videos
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.run_number }}
        path: cypress/results
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let message = '## 🧪 Cypress Test Results\n\n';
          
          try {
            // Intentar leer resultados de mochawesome si existen
            const mochaPath = 'cypress/results/mocha';
            if (fs.existsSync(mochaPath)) {
              const files = fs.readdirSync(mochaPath);
              const jsonFiles = files.filter(file => file.endsWith('.json'));
              
              if (jsonFiles.length > 0) {
                const latestReport = jsonFiles[0];
                const reportData = JSON.parse(fs.readFileSync(path.join(mochaPath, latestReport)));
                
                message += `### 📊 Summary\n`;
                message += `- **Total Tests**: ${reportData.stats.tests}\n`;
                message += `- **Passed**: ${reportData.stats.passes}\n`;
                message += `- **Failed**: ${reportData.stats.failures}\n`;
                message += `- **Duration**: ${Math.round(reportData.stats.duration / 1000)}s\n\n`;
                
                if (reportData.stats.failures > 0) {
                  message += `### ❌ Failed Tests\n`;
                  reportData.failures.forEach((failure, index) => {
                    message += `${index + 1}. **${failure.fullTitle}**\n`;
                    message += `   - Error: ${failure.err.message}\n\n`;
                  });
                }
              }
            }
          } catch (error) {
            message += 'Unable to parse test results.\n';
          }
          
          message += `\n📁 **Artifacts**: Check the Actions tab for videos and screenshots.\n`;
          message += `🔗 **Workflow**: [View Run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          }); 